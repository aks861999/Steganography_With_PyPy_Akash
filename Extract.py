import cv2
import numpy as np 
import random 

def decrypt(): 

    # Read the encrypted image generated by hiding the QR code in the image #
    img = cv2.imread('output.png') 
    width = img.shape[0] 
    height = img.shape[1] 
      
    # img1 is a blank image #
    img1 = np.zeros((width, height, 3), np.uint8)  
      
    for i in range(width): 
        for j in range(height): 
            for l in range(3): 
            
                v1 = format(img[i][j][l], '08b') 
                v2 = v1[4:] + chr(random.randint(0, 1)+48) * 4
                
                # Appending data to img1 #
                img1[i][j][l]= int(v2, 2) 
      
    # These is the image produced from the encrypted image  
    cv2.imwrite('decrypted.png', img1) 

decrypt()


####### Extract The Secret Code From QR Code #######


# read the output decrypted image
img = cv2.imread("decrypted.png") 

detector = cv2.QRCodeDetector()

# detect and decode
data, bbox, straight_qrcode = detector.detectAndDecode(img)

# if there is a QR code
if bbox is not None:
    
    #store the extracetd data in object 't'
    secret_text=data
    
    print(f"The Secret Text is:\n{data}")
    
    # display the image with lines length of bounding box
    n_lines = len(bbox)
    for i in range(n_lines):
        # draw all lines
        point1 = tuple(bbox[i][0])
        point2 = tuple(bbox[(i+1) % n_lines][0])
        cv2.line(img, point1, point2, color=(255, 0, 0), thickness=2)

## save the decrypted QR code ##
cv2.imwrite("decrypted_QR.png",img)

# display the decrypted image #
cv2.imshow("img", img)
cv2.waitKey(0)
cv2.destroyAllWindows()
